###
# Ingress for testing within Cloudflare network
###

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: drand-ingress-internal
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: contour
  namespace: drand
  labels:
    app: drand
spec:
  rules:
  - host: drand.ing.pdx-a.k8s.cfplat.com
    http:
      paths:
      - path: /dkg.Dkg/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Randomness/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Beacon/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Info/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /api/
        backend:
          serviceName: drand-service
          servicePort: http
  tls:
  - hosts:
    - drand.ing.pdx-a.k8s.cfplat.com
---
###
# Ingress for Spectrum to upstream to
###

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: drand-ingress-external
  annotations:
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: contour
  namespace: drand
  labels:
    app: drand
spec:
  rules:
  - host: drand.cloudflare.com
    http:
      paths:
      - path: /dkg.Dkg/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Randomness/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Beacon/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /drand.Info/
        backend:
          serviceName: drand-service
          servicePort: grpc
      - path: /api/
        backend:
          serviceName: drand-service
          servicePort: http
  tls:
  - hosts:
    - drand.cloudflare.com
    secretName: origin-cert
---
# THESE POLICIES BELOW DO NOT WORK YET; THIS IS TRACKED IN CRYPTO-1009

# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-http-egress
# spec:
#   podSelector: {}
#   policyTypes:
#     - Egress
#   egress:
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               app.pyli.cfplat.com/name: lavarand
#       ports:
#         - protocol: TCP
#           port: 8000
#     - to:
#       - ipBlock:
#           cidr: 0.0.0.0/0
#       - ipBlock:
#           cidr: ::/0
#       ports: # These are all pulled from kubernetes-configmap.yaml for the production toml.
#       - protocol: TCP
#         port: 443
#       - protocol: TCP
#         port: 7890
#       - protocol: TCP
#         port: 6000
#       - protocol: TCP
#         port: 8080
#       - protocol: TCP
#         port: 8888
#       - protocol: TCP
#         port: 8890
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-http-ingress
# spec:
#   podSelector: {}
#   policyTypes:
#     - Ingress
#   ingress:
#     - from:
#       - namespaceSelector:
#           matchLabels:
#             app.pyli.cfplat.com/name: ingress-system
#       ports:
#       - protocol: TCP
#         port: 8000
#       - protocol: TCP
#         port: 8100
#     - from:
#       - namespaceSelector:
#           matchLabels:
#             app.pyli.cfplat.com/name: monitoring-system
#       ports:
#       - protocol: TCP
#         port: 9000

